name: Angular Tests and Coverage

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'
      - 'master'
      - 'develop'
      - 'release/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      run: npm ci

    - name: Run Tests and Generate Coverage
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage/

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/lcov.info

    - name: Verify Coverage Threshold
      run: |
        COVERAGE=$(cat ./coverage/lcov.info | grep -E "SF:.*\.ts$" -A 1 | grep "LF:" | awk '{sum+=$2} END {print sum}')
        COVERED=$(cat ./coverage/lcov.info | grep -E "SF:.*\.ts$" -A 1 | grep "LH:" | awk '{sum+=$2} END {print sum}')
        COVERAGE_PERCENTAGE=$(awk "BEGIN {print ($COVERED/$COVERAGE)*100}")
        if (( $(echo "$COVERAGE_PERCENTAGE < 70" | bc -l) )); then
          echo "Code coverage is below 70%. Current coverage: $COVERAGE_PERCENTAGE%"
          exit 1
        else
          echo "Code coverage is at or above 70%. Current coverage: $COVERAGE_PERCENTAGE%"
        fi
